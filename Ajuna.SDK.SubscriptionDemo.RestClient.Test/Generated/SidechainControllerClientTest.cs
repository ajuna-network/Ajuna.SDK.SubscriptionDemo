//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Ajuna.SDK.SubscriptionDemo.RestClient.Test.Generated
{
   using System;
   using NUnit.Framework;
   using System.Threading.Tasks;
   using System.Net.Http;
   using Ajuna.SDK.SubscriptionDemo.RestClient.Mockup.Generated.Clients;
   using Ajuna.SDK.SubscriptionDemo.RestClient.Generated.Clients;
   using Ajuna.NetApi.Model.Types.Primitive;
   using Ajuna.SDK.SubscriptionDemo.NetApi.Generated.Model.SidechainPrimitives;
   
   public class SidechainControllerClientTest : ClientTestBase
   {
      private System.Net.Http.HttpClient _httpClient;
      [SetUp()]
      public void Setup()
      {
         _httpClient = CreateHttpClient();
      }
      public Ajuna.SDK.SubscriptionDemo.NetApi.Generated.Model.PrimitiveTypes.H256 GetTestValue2()
      {
         Ajuna.SDK.SubscriptionDemo.NetApi.Generated.Model.PrimitiveTypes.H256 result;
         result = new Ajuna.SDK.SubscriptionDemo.NetApi.Generated.Model.PrimitiveTypes.H256();
         result.Value = new Ajuna.SDK.SubscriptionDemo.NetApi.Generated.Model.Base.Arr32U8();
         result.Value.Create(new Ajuna.NetApi.Model.Types.Primitive.U8[] {
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8()});
         return result;
      }
      [Test()]
      public async System.Threading.Tasks.Task TestWorkerForShard()
      {
         // Construct new Mockup client to test with.
         SidechainControllerMockupClient mockupClient = new SidechainControllerMockupClient(_httpClient);

         // Construct new subscription client to test with.
         var subscriptionClient = CreateSubscriptionClient();

         // Construct new RPC client to test with.
         SidechainControllerClient rpcClient = new SidechainControllerClient(_httpClient, subscriptionClient);
         Ajuna.NetApi.Model.Types.Primitive.U64 mockupValue = this.GetTestValueU64();
         Ajuna.SDK.SubscriptionDemo.NetApi.Generated.Model.PrimitiveTypes.H256 mockupKey = this.GetTestValue2();

         Assert.IsTrue(await rpcClient.SubscribeWorkerForShard(mockupKey));

         // Save the previously generated mockup value in RPC service storage.
         bool mockupSetResult = await mockupClient.SetWorkerForShard(mockupValue, mockupKey);

         // Test that the expected mockup value was handled successfully from RPC service.
         Assert.IsTrue(mockupSetResult);
         var cts = new System.Threading.CancellationTokenSource(TimeSpan.FromSeconds(1));
         Assert.IsTrue(await subscriptionClient.ReceiveNextAsync(cts.Token));

         Ajuna.NetApi.Model.Types.Primitive.U64 rpcResult = await rpcClient.GetWorkerForShard(mockupKey);

         // Test that the expected mockup value matches the actual result from RPC service.
         Assert.AreEqual(mockupValue.Encode(), rpcResult.Encode());
      }
      public Ajuna.SDK.SubscriptionDemo.NetApi.Generated.Model.SidechainPrimitives.SidechainHeader GetTestValue4()
      {
         Ajuna.SDK.SubscriptionDemo.NetApi.Generated.Model.SidechainPrimitives.SidechainHeader result;
         result = new Ajuna.SDK.SubscriptionDemo.NetApi.Generated.Model.SidechainPrimitives.SidechainHeader();
         result.ParentHash = new Ajuna.SDK.SubscriptionDemo.NetApi.Generated.Model.PrimitiveTypes.H256();
         result.ParentHash = this.GetTestValue5();
         result.BlockNumber = this.GetTestValueU64();
         result.ShardId = new Ajuna.SDK.SubscriptionDemo.NetApi.Generated.Model.PrimitiveTypes.H256();
         result.ShardId = this.GetTestValue6();
         result.BlockDataHash = new Ajuna.SDK.SubscriptionDemo.NetApi.Generated.Model.PrimitiveTypes.H256();
         result.BlockDataHash = this.GetTestValue7();
         return result;
      }
      public Ajuna.SDK.SubscriptionDemo.NetApi.Generated.Model.PrimitiveTypes.H256 GetTestValue5()
      {
         Ajuna.SDK.SubscriptionDemo.NetApi.Generated.Model.PrimitiveTypes.H256 result;
         result = new Ajuna.SDK.SubscriptionDemo.NetApi.Generated.Model.PrimitiveTypes.H256();
         result.Value = new Ajuna.SDK.SubscriptionDemo.NetApi.Generated.Model.Base.Arr32U8();
         result.Value.Create(new Ajuna.NetApi.Model.Types.Primitive.U8[] {
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8()});
         return result;
      }
      public Ajuna.SDK.SubscriptionDemo.NetApi.Generated.Model.PrimitiveTypes.H256 GetTestValue6()
      {
         Ajuna.SDK.SubscriptionDemo.NetApi.Generated.Model.PrimitiveTypes.H256 result;
         result = new Ajuna.SDK.SubscriptionDemo.NetApi.Generated.Model.PrimitiveTypes.H256();
         result.Value = new Ajuna.SDK.SubscriptionDemo.NetApi.Generated.Model.Base.Arr32U8();
         result.Value.Create(new Ajuna.NetApi.Model.Types.Primitive.U8[] {
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8()});
         return result;
      }
      public Ajuna.SDK.SubscriptionDemo.NetApi.Generated.Model.PrimitiveTypes.H256 GetTestValue7()
      {
         Ajuna.SDK.SubscriptionDemo.NetApi.Generated.Model.PrimitiveTypes.H256 result;
         result = new Ajuna.SDK.SubscriptionDemo.NetApi.Generated.Model.PrimitiveTypes.H256();
         result.Value = new Ajuna.SDK.SubscriptionDemo.NetApi.Generated.Model.Base.Arr32U8();
         result.Value.Create(new Ajuna.NetApi.Model.Types.Primitive.U8[] {
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8()});
         return result;
      }
      public Ajuna.SDK.SubscriptionDemo.NetApi.Generated.Model.PrimitiveTypes.H256 GetTestValue8()
      {
         Ajuna.SDK.SubscriptionDemo.NetApi.Generated.Model.PrimitiveTypes.H256 result;
         result = new Ajuna.SDK.SubscriptionDemo.NetApi.Generated.Model.PrimitiveTypes.H256();
         result.Value = new Ajuna.SDK.SubscriptionDemo.NetApi.Generated.Model.Base.Arr32U8();
         result.Value.Create(new Ajuna.NetApi.Model.Types.Primitive.U8[] {
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8()});
         return result;
      }
      [Test()]
      public async System.Threading.Tasks.Task TestLatestSidechainHeader()
      {
         // Construct new Mockup client to test with.
         SidechainControllerMockupClient mockupClient = new SidechainControllerMockupClient(_httpClient);

         // Construct new subscription client to test with.
         var subscriptionClient = CreateSubscriptionClient();

         // Construct new RPC client to test with.
         SidechainControllerClient rpcClient = new SidechainControllerClient(_httpClient, subscriptionClient);
         Ajuna.SDK.SubscriptionDemo.NetApi.Generated.Model.SidechainPrimitives.SidechainHeader mockupValue = this.GetTestValue4();
         Ajuna.SDK.SubscriptionDemo.NetApi.Generated.Model.PrimitiveTypes.H256 mockupKey = this.GetTestValue8();

         Assert.IsTrue(await rpcClient.SubscribeLatestSidechainHeader(mockupKey));

         // Save the previously generated mockup value in RPC service storage.
         bool mockupSetResult = await mockupClient.SetLatestSidechainHeader(mockupValue, mockupKey);

         // Test that the expected mockup value was handled successfully from RPC service.
         Assert.IsTrue(mockupSetResult);
         var cts = new System.Threading.CancellationTokenSource(TimeSpan.FromSeconds(1));
         Assert.IsTrue(await subscriptionClient.ReceiveNextAsync(cts.Token));

         Ajuna.SDK.SubscriptionDemo.NetApi.Generated.Model.SidechainPrimitives.SidechainHeader rpcResult = await rpcClient.GetLatestSidechainHeader(mockupKey);

         // Test that the expected mockup value matches the actual result from RPC service.
         Assert.AreEqual(mockupValue.Encode(), rpcResult.Encode());
      }
      public Ajuna.SDK.SubscriptionDemo.NetApi.Generated.Model.SidechainPrimitives.SidechainHeader GetTestValue10()
      {
         Ajuna.SDK.SubscriptionDemo.NetApi.Generated.Model.SidechainPrimitives.SidechainHeader result;
         result = new Ajuna.SDK.SubscriptionDemo.NetApi.Generated.Model.SidechainPrimitives.SidechainHeader();
         result.ParentHash = new Ajuna.SDK.SubscriptionDemo.NetApi.Generated.Model.PrimitiveTypes.H256();
         result.ParentHash = this.GetTestValue11();
         result.BlockNumber = this.GetTestValueU64();
         result.ShardId = new Ajuna.SDK.SubscriptionDemo.NetApi.Generated.Model.PrimitiveTypes.H256();
         result.ShardId = this.GetTestValue12();
         result.BlockDataHash = new Ajuna.SDK.SubscriptionDemo.NetApi.Generated.Model.PrimitiveTypes.H256();
         result.BlockDataHash = this.GetTestValue13();
         return result;
      }
      public Ajuna.SDK.SubscriptionDemo.NetApi.Generated.Model.PrimitiveTypes.H256 GetTestValue11()
      {
         Ajuna.SDK.SubscriptionDemo.NetApi.Generated.Model.PrimitiveTypes.H256 result;
         result = new Ajuna.SDK.SubscriptionDemo.NetApi.Generated.Model.PrimitiveTypes.H256();
         result.Value = new Ajuna.SDK.SubscriptionDemo.NetApi.Generated.Model.Base.Arr32U8();
         result.Value.Create(new Ajuna.NetApi.Model.Types.Primitive.U8[] {
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8()});
         return result;
      }
      public Ajuna.SDK.SubscriptionDemo.NetApi.Generated.Model.PrimitiveTypes.H256 GetTestValue12()
      {
         Ajuna.SDK.SubscriptionDemo.NetApi.Generated.Model.PrimitiveTypes.H256 result;
         result = new Ajuna.SDK.SubscriptionDemo.NetApi.Generated.Model.PrimitiveTypes.H256();
         result.Value = new Ajuna.SDK.SubscriptionDemo.NetApi.Generated.Model.Base.Arr32U8();
         result.Value.Create(new Ajuna.NetApi.Model.Types.Primitive.U8[] {
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8()});
         return result;
      }
      public Ajuna.SDK.SubscriptionDemo.NetApi.Generated.Model.PrimitiveTypes.H256 GetTestValue13()
      {
         Ajuna.SDK.SubscriptionDemo.NetApi.Generated.Model.PrimitiveTypes.H256 result;
         result = new Ajuna.SDK.SubscriptionDemo.NetApi.Generated.Model.PrimitiveTypes.H256();
         result.Value = new Ajuna.SDK.SubscriptionDemo.NetApi.Generated.Model.Base.Arr32U8();
         result.Value.Create(new Ajuna.NetApi.Model.Types.Primitive.U8[] {
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8()});
         return result;
      }
      public Ajuna.NetApi.Model.Types.Base.BaseTuple<Ajuna.NetApi.Model.Types.Base.BaseTuple<Ajuna.SDK.SubscriptionDemo.NetApi.Generated.Model.PrimitiveTypes.H256, Ajuna.NetApi.Model.Types.Primitive.U64>, Ajuna.SDK.SubscriptionDemo.NetApi.Generated.Model.PrimitiveTypes.H256> GetTestValue14()
      {
         Ajuna.NetApi.Model.Types.Base.BaseTuple<Ajuna.NetApi.Model.Types.Base.BaseTuple<Ajuna.SDK.SubscriptionDemo.NetApi.Generated.Model.PrimitiveTypes.H256, Ajuna.NetApi.Model.Types.Primitive.U64>, Ajuna.SDK.SubscriptionDemo.NetApi.Generated.Model.PrimitiveTypes.H256> result;
         result = new Ajuna.NetApi.Model.Types.Base.BaseTuple<Ajuna.NetApi.Model.Types.Base.BaseTuple<Ajuna.SDK.SubscriptionDemo.NetApi.Generated.Model.PrimitiveTypes.H256, Ajuna.NetApi.Model.Types.Primitive.U64>, Ajuna.SDK.SubscriptionDemo.NetApi.Generated.Model.PrimitiveTypes.H256>();
         result.Create(this.GetTestValue15(), this.GetTestValue17());
         return result;
      }
      public Ajuna.NetApi.Model.Types.Base.BaseTuple<Ajuna.SDK.SubscriptionDemo.NetApi.Generated.Model.PrimitiveTypes.H256, Ajuna.NetApi.Model.Types.Primitive.U64> GetTestValue15()
      {
         Ajuna.NetApi.Model.Types.Base.BaseTuple<Ajuna.SDK.SubscriptionDemo.NetApi.Generated.Model.PrimitiveTypes.H256, Ajuna.NetApi.Model.Types.Primitive.U64> result;
         result = new Ajuna.NetApi.Model.Types.Base.BaseTuple<Ajuna.SDK.SubscriptionDemo.NetApi.Generated.Model.PrimitiveTypes.H256, Ajuna.NetApi.Model.Types.Primitive.U64>();
         result.Create(this.GetTestValue16(), this.GetTestValueU64());
         return result;
      }
      public Ajuna.SDK.SubscriptionDemo.NetApi.Generated.Model.PrimitiveTypes.H256 GetTestValue16()
      {
         Ajuna.SDK.SubscriptionDemo.NetApi.Generated.Model.PrimitiveTypes.H256 result;
         result = new Ajuna.SDK.SubscriptionDemo.NetApi.Generated.Model.PrimitiveTypes.H256();
         result.Value = new Ajuna.SDK.SubscriptionDemo.NetApi.Generated.Model.Base.Arr32U8();
         result.Value.Create(new Ajuna.NetApi.Model.Types.Primitive.U8[] {
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8()});
         return result;
      }
      public Ajuna.SDK.SubscriptionDemo.NetApi.Generated.Model.PrimitiveTypes.H256 GetTestValue17()
      {
         Ajuna.SDK.SubscriptionDemo.NetApi.Generated.Model.PrimitiveTypes.H256 result;
         result = new Ajuna.SDK.SubscriptionDemo.NetApi.Generated.Model.PrimitiveTypes.H256();
         result.Value = new Ajuna.SDK.SubscriptionDemo.NetApi.Generated.Model.Base.Arr32U8();
         result.Value.Create(new Ajuna.NetApi.Model.Types.Primitive.U8[] {
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8(),
                  this.GetTestValueU8()});
         return result;
      }
      [Test()]
      public async System.Threading.Tasks.Task TestSidechainHeaderQueue()
      {
         // Construct new Mockup client to test with.
         SidechainControllerMockupClient mockupClient = new SidechainControllerMockupClient(_httpClient);

         // Construct new subscription client to test with.
         var subscriptionClient = CreateSubscriptionClient();

         // Construct new RPC client to test with.
         SidechainControllerClient rpcClient = new SidechainControllerClient(_httpClient, subscriptionClient);
         Ajuna.SDK.SubscriptionDemo.NetApi.Generated.Model.SidechainPrimitives.SidechainHeader mockupValue = this.GetTestValue10();
         Ajuna.NetApi.Model.Types.Base.BaseTuple<Ajuna.NetApi.Model.Types.Base.BaseTuple<Ajuna.SDK.SubscriptionDemo.NetApi.Generated.Model.PrimitiveTypes.H256, Ajuna.NetApi.Model.Types.Primitive.U64>, Ajuna.SDK.SubscriptionDemo.NetApi.Generated.Model.PrimitiveTypes.H256> mockupKey = this.GetTestValue14();

         Assert.IsTrue(await rpcClient.SubscribeSidechainHeaderQueue(mockupKey));

         // Save the previously generated mockup value in RPC service storage.
         bool mockupSetResult = await mockupClient.SetSidechainHeaderQueue(mockupValue, mockupKey);

         // Test that the expected mockup value was handled successfully from RPC service.
         Assert.IsTrue(mockupSetResult);
         var cts = new System.Threading.CancellationTokenSource(TimeSpan.FromSeconds(1));
         Assert.IsTrue(await subscriptionClient.ReceiveNextAsync(cts.Token));

         Ajuna.SDK.SubscriptionDemo.NetApi.Generated.Model.SidechainPrimitives.SidechainHeader rpcResult = await rpcClient.GetSidechainHeaderQueue(mockupKey);

         // Test that the expected mockup value matches the actual result from RPC service.
         Assert.AreEqual(mockupValue.Encode(), rpcResult.Encode());
      }
   }
}
