//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Ajuna.NetApi.Model.Types.Base;
using Ajuna.NetApi.Model.Types.Primitive;
using Ajuna.ServiceLayer.Attributes;
using Ajuna.ServiceLayer.Storage;
using Ajuna.SDK.SubscriptionDemo.NetApi.Generated.Model.PrimitiveTypes;
using Ajuna.SDK.SubscriptionDemo.NetApi.Generated.Model.SpCore;
using Ajuna.SDK.SubscriptionDemo.NetApi.Generated.Model.TeerexPrimitives;
using System.Collections.Generic;
using System.Threading.Tasks;


namespace Ajuna.SDK.SubscriptionDemo.RestService.Generated.Storage
{
    
    
    /// <summary>
    /// ITeerexStorage interface definition.
    /// </summary>
    public interface ITeerexStorage : IStorage
    {
        
        /// <summary>
        /// >> EnclaveRegistry
        /// </summary>
        Ajuna.SDK.SubscriptionDemo.NetApi.Generated.Model.TeerexPrimitives.Enclave GetEnclaveRegistry(string key);
        
        /// <summary>
        /// >> EnclaveCount
        /// </summary>
        Ajuna.NetApi.Model.Types.Primitive.U64 GetEnclaveCount();
        
        /// <summary>
        /// >> EnclaveIndex
        /// </summary>
        Ajuna.NetApi.Model.Types.Primitive.U64 GetEnclaveIndex(string key);
        
        /// <summary>
        /// >> ExecutedCalls
        /// </summary>
        Ajuna.NetApi.Model.Types.Primitive.U64 GetExecutedCalls(string key);
        
        /// <summary>
        /// >> AllowSGXDebugMode
        /// </summary>
        Ajuna.NetApi.Model.Types.Primitive.Bool GetAllowSGXDebugMode();
    }
    
    /// <summary>
    /// TeerexStorage class definition.
    /// </summary>
    public sealed class TeerexStorage : ITeerexStorage
    {
        
        /// <summary>
        /// _enclaveRegistryTypedStorage typed storage field
        /// </summary>
        private TypedMapStorage<Ajuna.SDK.SubscriptionDemo.NetApi.Generated.Model.TeerexPrimitives.Enclave> _enclaveRegistryTypedStorage;
        
        /// <summary>
        /// _enclaveCountTypedStorage typed storage field
        /// </summary>
        private TypedStorage<Ajuna.NetApi.Model.Types.Primitive.U64> _enclaveCountTypedStorage;
        
        /// <summary>
        /// _enclaveIndexTypedStorage typed storage field
        /// </summary>
        private TypedMapStorage<Ajuna.NetApi.Model.Types.Primitive.U64> _enclaveIndexTypedStorage;
        
        /// <summary>
        /// _executedCallsTypedStorage typed storage field
        /// </summary>
        private TypedMapStorage<Ajuna.NetApi.Model.Types.Primitive.U64> _executedCallsTypedStorage;
        
        /// <summary>
        /// _allowSGXDebugModeTypedStorage typed storage field
        /// </summary>
        private TypedStorage<Ajuna.NetApi.Model.Types.Primitive.Bool> _allowSGXDebugModeTypedStorage;
        
        /// <summary>
        /// TeerexStorage constructor.
        /// </summary>
        public TeerexStorage(IStorageDataProvider storageDataProvider, IStorageChangeDelegate storageChangeDelegate)
        {
            this.EnclaveRegistryTypedStorage = new TypedMapStorage<Ajuna.SDK.SubscriptionDemo.NetApi.Generated.Model.TeerexPrimitives.Enclave>("Teerex.EnclaveRegistry", storageDataProvider, storageChangeDelegate);
            this.EnclaveCountTypedStorage = new TypedStorage<Ajuna.NetApi.Model.Types.Primitive.U64>("Teerex.EnclaveCount", storageDataProvider, storageChangeDelegate);
            this.EnclaveIndexTypedStorage = new TypedMapStorage<Ajuna.NetApi.Model.Types.Primitive.U64>("Teerex.EnclaveIndex", storageDataProvider, storageChangeDelegate);
            this.ExecutedCallsTypedStorage = new TypedMapStorage<Ajuna.NetApi.Model.Types.Primitive.U64>("Teerex.ExecutedCalls", storageDataProvider, storageChangeDelegate);
            this.AllowSGXDebugModeTypedStorage = new TypedStorage<Ajuna.NetApi.Model.Types.Primitive.Bool>("Teerex.AllowSGXDebugMode", storageDataProvider, storageChangeDelegate);
        }
        
        /// <summary>
        /// _enclaveRegistryTypedStorage property
        /// </summary>
        public TypedMapStorage<Ajuna.SDK.SubscriptionDemo.NetApi.Generated.Model.TeerexPrimitives.Enclave> EnclaveRegistryTypedStorage
        {
            get
            {
                return _enclaveRegistryTypedStorage;
            }
            set
            {
                _enclaveRegistryTypedStorage = value;
            }
        }
        
        /// <summary>
        /// _enclaveCountTypedStorage property
        /// </summary>
        public TypedStorage<Ajuna.NetApi.Model.Types.Primitive.U64> EnclaveCountTypedStorage
        {
            get
            {
                return _enclaveCountTypedStorage;
            }
            set
            {
                _enclaveCountTypedStorage = value;
            }
        }
        
        /// <summary>
        /// _enclaveIndexTypedStorage property
        /// </summary>
        public TypedMapStorage<Ajuna.NetApi.Model.Types.Primitive.U64> EnclaveIndexTypedStorage
        {
            get
            {
                return _enclaveIndexTypedStorage;
            }
            set
            {
                _enclaveIndexTypedStorage = value;
            }
        }
        
        /// <summary>
        /// _executedCallsTypedStorage property
        /// </summary>
        public TypedMapStorage<Ajuna.NetApi.Model.Types.Primitive.U64> ExecutedCallsTypedStorage
        {
            get
            {
                return _executedCallsTypedStorage;
            }
            set
            {
                _executedCallsTypedStorage = value;
            }
        }
        
        /// <summary>
        /// _allowSGXDebugModeTypedStorage property
        /// </summary>
        public TypedStorage<Ajuna.NetApi.Model.Types.Primitive.Bool> AllowSGXDebugModeTypedStorage
        {
            get
            {
                return _allowSGXDebugModeTypedStorage;
            }
            set
            {
                _allowSGXDebugModeTypedStorage = value;
            }
        }
        
        /// <summary>
        /// Connects to all storages and initializes the change subscription handling.
        /// </summary>
        public async Task InitializeAsync(Ajuna.ServiceLayer.Storage.IStorageDataProvider dataProvider)
        {
            await EnclaveRegistryTypedStorage.InitializeAsync("Teerex", "EnclaveRegistry");
            await EnclaveCountTypedStorage.InitializeAsync("Teerex", "EnclaveCount");
            await EnclaveIndexTypedStorage.InitializeAsync("Teerex", "EnclaveIndex");
            await ExecutedCallsTypedStorage.InitializeAsync("Teerex", "ExecutedCalls");
            await AllowSGXDebugModeTypedStorage.InitializeAsync("Teerex", "AllowSGXDebugMode");
        }
        
        /// <summary>
        /// Implements any storage change for Teerex.EnclaveRegistry
        /// </summary>
        [StorageChange("Teerex", "EnclaveRegistry")]
        public void OnUpdateEnclaveRegistry(string key, string data)
        {
            EnclaveRegistryTypedStorage.Update(key, data);
        }
        
        /// <summary>
        /// >> EnclaveRegistry
        /// </summary>
        public Ajuna.SDK.SubscriptionDemo.NetApi.Generated.Model.TeerexPrimitives.Enclave GetEnclaveRegistry(string key)
        {
            if ((key == null))
            {
                return null;
            }
            if (EnclaveRegistryTypedStorage.Dictionary.TryGetValue(key, out Ajuna.SDK.SubscriptionDemo.NetApi.Generated.Model.TeerexPrimitives.Enclave result))
            {
                return result;
            }
            else
            {
                return null;
            }
        }
        
        /// <summary>
        /// Implements any storage change for Teerex.EnclaveCount
        /// </summary>
        [StorageChange("Teerex", "EnclaveCount")]
        public void OnUpdateEnclaveCount(string data)
        {
            EnclaveCountTypedStorage.Update(data);
        }
        
        /// <summary>
        /// >> EnclaveCount
        /// </summary>
        public Ajuna.NetApi.Model.Types.Primitive.U64 GetEnclaveCount()
        {
            return EnclaveCountTypedStorage.Get();
        }
        
        /// <summary>
        /// Implements any storage change for Teerex.EnclaveIndex
        /// </summary>
        [StorageChange("Teerex", "EnclaveIndex")]
        public void OnUpdateEnclaveIndex(string key, string data)
        {
            EnclaveIndexTypedStorage.Update(key, data);
        }
        
        /// <summary>
        /// >> EnclaveIndex
        /// </summary>
        public Ajuna.NetApi.Model.Types.Primitive.U64 GetEnclaveIndex(string key)
        {
            if ((key == null))
            {
                return null;
            }
            if (EnclaveIndexTypedStorage.Dictionary.TryGetValue(key, out Ajuna.NetApi.Model.Types.Primitive.U64 result))
            {
                return result;
            }
            else
            {
                return null;
            }
        }
        
        /// <summary>
        /// Implements any storage change for Teerex.ExecutedCalls
        /// </summary>
        [StorageChange("Teerex", "ExecutedCalls")]
        public void OnUpdateExecutedCalls(string key, string data)
        {
            ExecutedCallsTypedStorage.Update(key, data);
        }
        
        /// <summary>
        /// >> ExecutedCalls
        /// </summary>
        public Ajuna.NetApi.Model.Types.Primitive.U64 GetExecutedCalls(string key)
        {
            if ((key == null))
            {
                return null;
            }
            if (ExecutedCallsTypedStorage.Dictionary.TryGetValue(key, out Ajuna.NetApi.Model.Types.Primitive.U64 result))
            {
                return result;
            }
            else
            {
                return null;
            }
        }
        
        /// <summary>
        /// Implements any storage change for Teerex.AllowSGXDebugMode
        /// </summary>
        [StorageChange("Teerex", "AllowSGXDebugMode")]
        public void OnUpdateAllowSGXDebugMode(string data)
        {
            AllowSGXDebugModeTypedStorage.Update(data);
        }
        
        /// <summary>
        /// >> AllowSGXDebugMode
        /// </summary>
        public Ajuna.NetApi.Model.Types.Primitive.Bool GetAllowSGXDebugMode()
        {
            return AllowSGXDebugModeTypedStorage.Get();
        }
    }
}
