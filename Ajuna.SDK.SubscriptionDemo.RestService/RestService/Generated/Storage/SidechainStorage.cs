//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Ajuna.NetApi.Model.Types.Base;
using Ajuna.NetApi.Model.Types.Primitive;
using Ajuna.ServiceLayer.Attributes;
using Ajuna.ServiceLayer.Storage;
using Ajuna.SDK.SubscriptionDemo.NetApi.Generated.Model.PrimitiveTypes;
using Ajuna.SDK.SubscriptionDemo.NetApi.Generated.Model.SidechainPrimitives;
using System.Collections.Generic;
using System.Threading.Tasks;


namespace Ajuna.SDK.SubscriptionDemo.RestService.Generated.Storage
{
    
    
    /// <summary>
    /// ISidechainStorage interface definition.
    /// </summary>
    public interface ISidechainStorage : IStorage
    {
        
        /// <summary>
        /// >> WorkerForShard
        /// </summary>
        Ajuna.NetApi.Model.Types.Primitive.U64 GetWorkerForShard(string key);
        
        /// <summary>
        /// >> LatestSidechainHeader
        /// </summary>
        Ajuna.SDK.SubscriptionDemo.NetApi.Generated.Model.SidechainPrimitives.SidechainHeader GetLatestSidechainHeader(string key);
        
        /// <summary>
        /// >> SidechainHeaderQueue
        /// </summary>
        Ajuna.SDK.SubscriptionDemo.NetApi.Generated.Model.SidechainPrimitives.SidechainHeader GetSidechainHeaderQueue(string key);
    }
    
    /// <summary>
    /// SidechainStorage class definition.
    /// </summary>
    public sealed class SidechainStorage : ISidechainStorage
    {
        
        /// <summary>
        /// _workerForShardTypedStorage typed storage field
        /// </summary>
        private TypedMapStorage<Ajuna.NetApi.Model.Types.Primitive.U64> _workerForShardTypedStorage;
        
        /// <summary>
        /// _latestSidechainHeaderTypedStorage typed storage field
        /// </summary>
        private TypedMapStorage<Ajuna.SDK.SubscriptionDemo.NetApi.Generated.Model.SidechainPrimitives.SidechainHeader> _latestSidechainHeaderTypedStorage;
        
        /// <summary>
        /// _sidechainHeaderQueueTypedStorage typed storage field
        /// </summary>
        private TypedMapStorage<Ajuna.SDK.SubscriptionDemo.NetApi.Generated.Model.SidechainPrimitives.SidechainHeader> _sidechainHeaderQueueTypedStorage;
        
        /// <summary>
        /// SidechainStorage constructor.
        /// </summary>
        public SidechainStorage(IStorageDataProvider storageDataProvider, IStorageChangeDelegate storageChangeDelegate)
        {
            this.WorkerForShardTypedStorage = new TypedMapStorage<Ajuna.NetApi.Model.Types.Primitive.U64>("Sidechain.WorkerForShard", storageDataProvider, storageChangeDelegate);
            this.LatestSidechainHeaderTypedStorage = new TypedMapStorage<Ajuna.SDK.SubscriptionDemo.NetApi.Generated.Model.SidechainPrimitives.SidechainHeader>("Sidechain.LatestSidechainHeader", storageDataProvider, storageChangeDelegate);
            this.SidechainHeaderQueueTypedStorage = new TypedMapStorage<Ajuna.SDK.SubscriptionDemo.NetApi.Generated.Model.SidechainPrimitives.SidechainHeader>("Sidechain.SidechainHeaderQueue", storageDataProvider, storageChangeDelegate);
        }
        
        /// <summary>
        /// _workerForShardTypedStorage property
        /// </summary>
        public TypedMapStorage<Ajuna.NetApi.Model.Types.Primitive.U64> WorkerForShardTypedStorage
        {
            get
            {
                return _workerForShardTypedStorage;
            }
            set
            {
                _workerForShardTypedStorage = value;
            }
        }
        
        /// <summary>
        /// _latestSidechainHeaderTypedStorage property
        /// </summary>
        public TypedMapStorage<Ajuna.SDK.SubscriptionDemo.NetApi.Generated.Model.SidechainPrimitives.SidechainHeader> LatestSidechainHeaderTypedStorage
        {
            get
            {
                return _latestSidechainHeaderTypedStorage;
            }
            set
            {
                _latestSidechainHeaderTypedStorage = value;
            }
        }
        
        /// <summary>
        /// _sidechainHeaderQueueTypedStorage property
        /// </summary>
        public TypedMapStorage<Ajuna.SDK.SubscriptionDemo.NetApi.Generated.Model.SidechainPrimitives.SidechainHeader> SidechainHeaderQueueTypedStorage
        {
            get
            {
                return _sidechainHeaderQueueTypedStorage;
            }
            set
            {
                _sidechainHeaderQueueTypedStorage = value;
            }
        }
        
        /// <summary>
        /// Connects to all storages and initializes the change subscription handling.
        /// </summary>
        public async Task InitializeAsync(Ajuna.ServiceLayer.Storage.IStorageDataProvider dataProvider)
        {
            await WorkerForShardTypedStorage.InitializeAsync("Sidechain", "WorkerForShard");
            await LatestSidechainHeaderTypedStorage.InitializeAsync("Sidechain", "LatestSidechainHeader");
            await SidechainHeaderQueueTypedStorage.InitializeAsync("Sidechain", "SidechainHeaderQueue");
        }
        
        /// <summary>
        /// Implements any storage change for Sidechain.WorkerForShard
        /// </summary>
        [StorageChange("Sidechain", "WorkerForShard")]
        public void OnUpdateWorkerForShard(string key, string data)
        {
            WorkerForShardTypedStorage.Update(key, data);
        }
        
        /// <summary>
        /// >> WorkerForShard
        /// </summary>
        public Ajuna.NetApi.Model.Types.Primitive.U64 GetWorkerForShard(string key)
        {
            if ((key == null))
            {
                return null;
            }
            if (WorkerForShardTypedStorage.Dictionary.TryGetValue(key, out Ajuna.NetApi.Model.Types.Primitive.U64 result))
            {
                return result;
            }
            else
            {
                return null;
            }
        }
        
        /// <summary>
        /// Implements any storage change for Sidechain.LatestSidechainHeader
        /// </summary>
        [StorageChange("Sidechain", "LatestSidechainHeader")]
        public void OnUpdateLatestSidechainHeader(string key, string data)
        {
            LatestSidechainHeaderTypedStorage.Update(key, data);
        }
        
        /// <summary>
        /// >> LatestSidechainHeader
        /// </summary>
        public Ajuna.SDK.SubscriptionDemo.NetApi.Generated.Model.SidechainPrimitives.SidechainHeader GetLatestSidechainHeader(string key)
        {
            if ((key == null))
            {
                return null;
            }
            if (LatestSidechainHeaderTypedStorage.Dictionary.TryGetValue(key, out Ajuna.SDK.SubscriptionDemo.NetApi.Generated.Model.SidechainPrimitives.SidechainHeader result))
            {
                return result;
            }
            else
            {
                return null;
            }
        }
        
        /// <summary>
        /// Implements any storage change for Sidechain.SidechainHeaderQueue
        /// </summary>
        [StorageChange("Sidechain", "SidechainHeaderQueue")]
        public void OnUpdateSidechainHeaderQueue(string key, string data)
        {
            SidechainHeaderQueueTypedStorage.Update(key, data);
        }
        
        /// <summary>
        /// >> SidechainHeaderQueue
        /// </summary>
        public Ajuna.SDK.SubscriptionDemo.NetApi.Generated.Model.SidechainPrimitives.SidechainHeader GetSidechainHeaderQueue(string key)
        {
            if ((key == null))
            {
                return null;
            }
            if (SidechainHeaderQueueTypedStorage.Dictionary.TryGetValue(key, out Ajuna.SDK.SubscriptionDemo.NetApi.Generated.Model.SidechainPrimitives.SidechainHeader result))
            {
                return result;
            }
            else
            {
                return null;
            }
        }
    }
}
