//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Ajuna.SDK.SubscriptionDemo.RestClient.Generated.Clients
{
   using System;
   using System.Threading.Tasks;
   using System.Net.Http;
   using Ajuna.SDK.SubscriptionDemo.NetApi.Generated.Model.AjunaCommon;
   using Ajuna.NetApi.Model.Types.Primitive;
   using Ajuna.SDK.SubscriptionDemo.RestClient.Generated.Interfaces;
   
   public sealed class RunnerControllerClient : BaseClient, IRunnerControllerClient
   {
      private HttpClient _httpClient;
      private BaseSubscriptionClient _subscriptionClient;
      public RunnerControllerClient(HttpClient httpClient, BaseSubscriptionClient subscriptionClient)
      {
         _httpClient = httpClient;
         _subscriptionClient = subscriptionClient;
      }
      public async Task<EnumRunnerState> GetRunners(U32 key)
      {
         return await SendRequestAsync<EnumRunnerState>(_httpClient, "runner/runners", Ajuna.SDK.SubscriptionDemo.NetApi.Generated.Model.PalletRunner.RunnerStorage.RunnersParams(key));
      }
      public async Task<bool> SubscribeRunners(U32 key)
      {
         return await _subscriptionClient.SubscribeAsync("Runner.Runners", Ajuna.SDK.SubscriptionDemo.NetApi.Generated.Model.PalletRunner.RunnerStorage.RunnersParams(key));
      }
      public async Task<U32> GetNonce()
      {
         return await SendRequestAsync<U32>(_httpClient, "runner/nonce");
      }
      public async Task<bool> SubscribeNonce()
      {
         return await _subscriptionClient.SubscribeAsync("Runner.Nonce");
      }
   }
}
