//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Ajuna.SDK.SubscriptionDemo.RestClient.Generated.Clients
{
   using System;
   using System.Threading.Tasks;
   using System.Net.Http;
   using Ajuna.SDK.SubscriptionDemo.NetApi.Generated.Model.TeerexPrimitives;
   using Ajuna.NetApi.Model.Types.Primitive;
   using Ajuna.SDK.SubscriptionDemo.RestClient.Generated.Interfaces;
   
   public sealed class TeerexControllerClient : BaseClient, ITeerexControllerClient
   {
      private HttpClient _httpClient;
      private BaseSubscriptionClient _subscriptionClient;
      public TeerexControllerClient(HttpClient httpClient, BaseSubscriptionClient subscriptionClient)
      {
         _httpClient = httpClient;
         _subscriptionClient = subscriptionClient;
      }
      public async Task<Enclave> GetEnclaveRegistry(U64 key)
      {
         return await SendRequestAsync<Enclave>(_httpClient, "teerex/enclaveregistry", Ajuna.SDK.SubscriptionDemo.NetApi.Generated.Model.PalletTeerex.TeerexStorage.EnclaveRegistryParams(key));
      }
      public async Task<bool> SubscribeEnclaveRegistry(U64 key)
      {
         return await _subscriptionClient.SubscribeAsync("Teerex.EnclaveRegistry", Ajuna.SDK.SubscriptionDemo.NetApi.Generated.Model.PalletTeerex.TeerexStorage.EnclaveRegistryParams(key));
      }
      public async Task<U64> GetEnclaveCount()
      {
         return await SendRequestAsync<U64>(_httpClient, "teerex/enclavecount");
      }
      public async Task<bool> SubscribeEnclaveCount()
      {
         return await _subscriptionClient.SubscribeAsync("Teerex.EnclaveCount");
      }
      public async Task<U64> GetEnclaveIndex(Ajuna.SDK.SubscriptionDemo.NetApi.Generated.Model.SpCore.AccountId32 key)
      {
         return await SendRequestAsync<U64>(_httpClient, "teerex/enclaveindex", Ajuna.SDK.SubscriptionDemo.NetApi.Generated.Model.PalletTeerex.TeerexStorage.EnclaveIndexParams(key));
      }
      public async Task<bool> SubscribeEnclaveIndex(Ajuna.SDK.SubscriptionDemo.NetApi.Generated.Model.SpCore.AccountId32 key)
      {
         return await _subscriptionClient.SubscribeAsync("Teerex.EnclaveIndex", Ajuna.SDK.SubscriptionDemo.NetApi.Generated.Model.PalletTeerex.TeerexStorage.EnclaveIndexParams(key));
      }
      public async Task<U64> GetExecutedCalls(Ajuna.SDK.SubscriptionDemo.NetApi.Generated.Model.PrimitiveTypes.H256 key)
      {
         return await SendRequestAsync<U64>(_httpClient, "teerex/executedcalls", Ajuna.SDK.SubscriptionDemo.NetApi.Generated.Model.PalletTeerex.TeerexStorage.ExecutedCallsParams(key));
      }
      public async Task<bool> SubscribeExecutedCalls(Ajuna.SDK.SubscriptionDemo.NetApi.Generated.Model.PrimitiveTypes.H256 key)
      {
         return await _subscriptionClient.SubscribeAsync("Teerex.ExecutedCalls", Ajuna.SDK.SubscriptionDemo.NetApi.Generated.Model.PalletTeerex.TeerexStorage.ExecutedCallsParams(key));
      }
      public async Task<Bool> GetAllowSGXDebugMode()
      {
         return await SendRequestAsync<Bool>(_httpClient, "teerex/allowsgxdebugmode");
      }
      public async Task<bool> SubscribeAllowSGXDebugMode()
      {
         return await _subscriptionClient.SubscribeAsync("Teerex.AllowSGXDebugMode");
      }
   }
}
