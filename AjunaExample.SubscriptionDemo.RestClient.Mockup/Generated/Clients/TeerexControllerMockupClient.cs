//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AjunaExample.SubscriptionDemo.RestClient.Mockup.Generated.Clients
{
   using System;
   using System.Threading.Tasks;
   using System.Net.Http;
   using AjunaExample.SubscriptionDemo.NetApi.Generated.Model.TeerexPrimitives;
   using Ajuna.NetApi.Model.Types.Primitive;
   using AjunaExample.SubscriptionDemo.RestClient.Mockup.Generated.Interfaces;
   
   public sealed class TeerexControllerMockupClient : MockupBaseClient, ITeerexControllerMockupClient
   {
      private HttpClient _httpClient;
      public TeerexControllerMockupClient(HttpClient httpClient)
      {
         _httpClient = httpClient;
      }
      public async Task<bool> SetEnclaveRegistry(Enclave value, U64 key)
      {
         return await SendMockupRequestAsync(_httpClient, "Teerex/EnclaveRegistry", value.Encode(), AjunaExample.SubscriptionDemo.NetApi.Generated.Model.PalletTeerex.TeerexStorage.EnclaveRegistryParams(key));
      }
      public async Task<bool> SetEnclaveCount(U64 value)
      {
         return await SendMockupRequestAsync(_httpClient, "Teerex/EnclaveCount", value.Encode(), AjunaExample.SubscriptionDemo.NetApi.Generated.Model.PalletTeerex.TeerexStorage.EnclaveCountParams());
      }
      public async Task<bool> SetEnclaveIndex(U64 value, AjunaExample.SubscriptionDemo.NetApi.Generated.Model.SpCore.AccountId32 key)
      {
         return await SendMockupRequestAsync(_httpClient, "Teerex/EnclaveIndex", value.Encode(), AjunaExample.SubscriptionDemo.NetApi.Generated.Model.PalletTeerex.TeerexStorage.EnclaveIndexParams(key));
      }
      public async Task<bool> SetExecutedCalls(U64 value, AjunaExample.SubscriptionDemo.NetApi.Generated.Model.PrimitiveTypes.H256 key)
      {
         return await SendMockupRequestAsync(_httpClient, "Teerex/ExecutedCalls", value.Encode(), AjunaExample.SubscriptionDemo.NetApi.Generated.Model.PalletTeerex.TeerexStorage.ExecutedCallsParams(key));
      }
      public async Task<bool> SetAllowSGXDebugMode(Bool value)
      {
         return await SendMockupRequestAsync(_httpClient, "Teerex/AllowSGXDebugMode", value.Encode(), AjunaExample.SubscriptionDemo.NetApi.Generated.Model.PalletTeerex.TeerexStorage.AllowSGXDebugModeParams());
      }
   }
}
