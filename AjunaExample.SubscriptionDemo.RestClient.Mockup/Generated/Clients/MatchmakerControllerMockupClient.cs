//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AjunaExample.SubscriptionDemo.RestClient.Mockup.Generated.Clients
{
   using System;
   using System.Threading.Tasks;
   using System.Net.Http;
   using AjunaExample.SubscriptionDemo.NetApi.Generated.Model.PalletAjunaMatchmaker;
   using AjunaExample.SubscriptionDemo.NetApi.Generated.Model.SpCore;
   using Ajuna.NetApi.Model.Types.Primitive;
   using AjunaExample.SubscriptionDemo.RestClient.Mockup.Generated.Interfaces;
   
   public sealed class MatchmakerControllerMockupClient : MockupBaseClient, IMatchmakerControllerMockupClient
   {
      private HttpClient _httpClient;
      public MatchmakerControllerMockupClient(HttpClient httpClient)
      {
         _httpClient = httpClient;
      }
      public async Task<bool> SetBrackets(BracketRange value, U32 key)
      {
         return await SendMockupRequestAsync(_httpClient, "Matchmaker/Brackets", value.Encode(), AjunaExample.SubscriptionDemo.NetApi.Generated.Model.PalletMatchmaker.MatchmakerStorage.BracketsParams(key));
      }
      public async Task<bool> SetPlayers(AccountId32 value, Ajuna.NetApi.Model.Types.Base.BaseTuple<U32, U32> key)
      {
         return await SendMockupRequestAsync(_httpClient, "Matchmaker/Players", value.Encode(), AjunaExample.SubscriptionDemo.NetApi.Generated.Model.PalletMatchmaker.MatchmakerStorage.PlayersParams(key));
      }
      public async Task<bool> SetPlayerQueue(U8 value, AccountId32 key)
      {
         return await SendMockupRequestAsync(_httpClient, "Matchmaker/PlayerQueue", value.Encode(), AjunaExample.SubscriptionDemo.NetApi.Generated.Model.PalletMatchmaker.MatchmakerStorage.PlayerQueueParams(key));
      }
   }
}
