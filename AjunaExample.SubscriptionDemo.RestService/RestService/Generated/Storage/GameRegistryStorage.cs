//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Ajuna.NetApi.Model.Types.Base;
using Ajuna.NetApi.Model.Types.Primitive;
using Ajuna.ServiceLayer.Attributes;
using Ajuna.ServiceLayer.Storage;
using AjunaExample.SubscriptionDemo.NetApi.Generated.Model.SpCore;
using System.Collections.Generic;
using System.Threading.Tasks;


namespace AjunaExample.SubscriptionDemo.RestService.Generated.Storage
{
    
    
    /// <summary>
    /// IGameRegistryStorage interface definition.
    /// </summary>
    public interface IGameRegistryStorage : IStorage
    {
        
        /// <summary>
        /// >> Queued
        /// </summary>
        BaseVec<Ajuna.NetApi.Model.Types.Primitive.U32> GetQueued();
        
        /// <summary>
        /// >> Players
        /// </summary>
        Ajuna.NetApi.Model.Types.Primitive.U32 GetPlayers(string key);
    }
    
    /// <summary>
    /// GameRegistryStorage class definition.
    /// </summary>
    public sealed class GameRegistryStorage : IGameRegistryStorage
    {
        
        /// <summary>
        /// _queuedTypedStorage typed storage field
        /// </summary>
        private TypedStorage<BaseVec<Ajuna.NetApi.Model.Types.Primitive.U32>> _queuedTypedStorage;
        
        /// <summary>
        /// _playersTypedStorage typed storage field
        /// </summary>
        private TypedMapStorage<Ajuna.NetApi.Model.Types.Primitive.U32> _playersTypedStorage;
        
        /// <summary>
        /// GameRegistryStorage constructor.
        /// </summary>
        public GameRegistryStorage(IStorageDataProvider storageDataProvider, IStorageChangeDelegate storageChangeDelegate)
        {
            this.QueuedTypedStorage = new TypedStorage<BaseVec<Ajuna.NetApi.Model.Types.Primitive.U32>>("GameRegistry.Queued", storageDataProvider, storageChangeDelegate);
            this.PlayersTypedStorage = new TypedMapStorage<Ajuna.NetApi.Model.Types.Primitive.U32>("GameRegistry.Players", storageDataProvider, storageChangeDelegate);
        }
        
        /// <summary>
        /// _queuedTypedStorage property
        /// </summary>
        public TypedStorage<BaseVec<Ajuna.NetApi.Model.Types.Primitive.U32>> QueuedTypedStorage
        {
            get
            {
                return _queuedTypedStorage;
            }
            set
            {
                _queuedTypedStorage = value;
            }
        }
        
        /// <summary>
        /// _playersTypedStorage property
        /// </summary>
        public TypedMapStorage<Ajuna.NetApi.Model.Types.Primitive.U32> PlayersTypedStorage
        {
            get
            {
                return _playersTypedStorage;
            }
            set
            {
                _playersTypedStorage = value;
            }
        }
        
        /// <summary>
        /// Connects to all storages and initializes the change subscription handling.
        /// </summary>
        public async Task InitializeAsync(Ajuna.ServiceLayer.Storage.IStorageDataProvider dataProvider)
        {
            await QueuedTypedStorage.InitializeAsync("GameRegistry", "Queued");
            await PlayersTypedStorage.InitializeAsync("GameRegistry", "Players");
        }
        
        /// <summary>
        /// Implements any storage change for GameRegistry.Queued
        /// </summary>
        [StorageChange("GameRegistry", "Queued")]
        public void OnUpdateQueued(string data)
        {
            QueuedTypedStorage.Update(data);
        }
        
        /// <summary>
        /// >> Queued
        /// </summary>
        public BaseVec<Ajuna.NetApi.Model.Types.Primitive.U32> GetQueued()
        {
            return QueuedTypedStorage.Get();
        }
        
        /// <summary>
        /// Implements any storage change for GameRegistry.Players
        /// </summary>
        [StorageChange("GameRegistry", "Players")]
        public void OnUpdatePlayers(string key, string data)
        {
            PlayersTypedStorage.Update(key, data);
        }
        
        /// <summary>
        /// >> Players
        /// </summary>
        public Ajuna.NetApi.Model.Types.Primitive.U32 GetPlayers(string key)
        {
            if ((key == null))
            {
                return null;
            }
            if (PlayersTypedStorage.Dictionary.TryGetValue(key, out Ajuna.NetApi.Model.Types.Primitive.U32 result))
            {
                return result;
            }
            else
            {
                return null;
            }
        }
    }
}
